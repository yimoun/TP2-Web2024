// <auto-generated />
using System;
using ForumDiscussion.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForumDiscussion.Migrations
{
    [DbContext(typeof(ForumContext))]
    [Migration("20240917103939_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ForumDiscussion.Models.Membre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Profil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Membre");
                });

            modelBuilder.Entity("ForumDiscussion.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuteurId")
                        .HasColumnType("int");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NbDislike")
                        .HasColumnType("int");

                    b.Property<int>("NbLike")
                        .HasColumnType("int");

                    b.Property<int>("NbView")
                        .HasColumnType("int");

                    b.Property<int>("SujetId")
                        .HasColumnType("int");

                    b.Property<string>("attach")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuteurId");

                    b.HasIndex("SujetId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ForumDiscussion.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("ForumDiscussion.Models.Sujet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Auteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.HasIndex("SectionId");

                    b.ToTable("Sujet");
                });

            modelBuilder.Entity("ForumDiscussion.Models.Message", b =>
                {
                    b.HasOne("ForumDiscussion.Models.Membre", "Auteur")
                        .WithMany("Messages")
                        .HasForeignKey("AuteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForumDiscussion.Models.Sujet", "Sujet")
                        .WithMany("Messages")
                        .HasForeignKey("SujetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auteur");

                    b.Navigation("Sujet");
                });

            modelBuilder.Entity("ForumDiscussion.Models.Sujet", b =>
                {
                    b.HasOne("ForumDiscussion.Models.Membre", "Membre")
                        .WithMany("Sujets")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ForumDiscussion.Models.Section", "Section")
                        .WithMany("Sujets")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membre");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("ForumDiscussion.Models.Membre", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Sujets");
                });

            modelBuilder.Entity("ForumDiscussion.Models.Section", b =>
                {
                    b.Navigation("Sujets");
                });

            modelBuilder.Entity("ForumDiscussion.Models.Sujet", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
